/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * VueFen1.java
 *
 * Created on 5 oct. 2011, 15:40:59
 */

package javaapplication2;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Toolkit;
import java.util.Iterator;
import java.util.Set;
import java.util.Vector;
import javax.swing.JPanel;

/**
 *
 * @author michelre
 */
public class VueFen1 extends javax.swing.JFrame {

    /** Creates new form VueFen1 */
    public VueFen1() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")

    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFrame1 = new javax.swing.JFrame();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        comboBoxNbJoueur = new javax.swing.JComboBox();
        jPanel1 = new javax.swing.JPanel();
        panelNomJoueur1 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        textNomJoueur1 = new javax.swing.JTextField();
        panelNomJoueur2 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        textNomJoueur2 = new javax.swing.JTextField();
        panelNomJoueur3 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        textNomJoueur3 = new javax.swing.JTextField();
        panelNomJoueur4 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        textNomJoueur4 = new javax.swing.JTextField();
        jPanel6 = new javax.swing.JPanel();
        buttonJouer = new javax.swing.JButton();
        jFrame2 = new javax.swing.JFrame();
        jButton1 = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        panelJeu = new javax.swing.JPanel();
        carte11 = new javax.swing.JPanel();
        carte12 = new javax.swing.JPanel();
        carte13 = new javax.swing.JPanel();
        carte14 = new javax.swing.JPanel();
        carte21 = new javax.swing.JPanel();
        carte22 = new javax.swing.JPanel();
        carte23 = new javax.swing.JPanel();
        carte24 = new javax.swing.JPanel();
        carte31 = new javax.swing.JPanel();
        carte32 = new javax.swing.JPanel();
        carte33 = new javax.swing.JPanel();
        carte34 = new javax.swing.JPanel();
        carte41 = new javax.swing.JPanel();
        carte42 = new javax.swing.JPanel();
        carte43 = new javax.swing.JPanel();
        carte44 = new javax.swing.JPanel();
        panelScore = new javax.swing.JPanel();
        progressBarCarte = new javax.swing.JProgressBar();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel3 = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        panelJoueur1 = new javax.swing.JPanel();
        scorePseudo1 = new javax.swing.JLabel();
        scoreJoueur1 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        labelPartieWin1 = new javax.swing.JLabel();
        panelJoueur2 = new javax.swing.JPanel();
        scorePseudo2 = new javax.swing.JLabel();
        scoreJoueur2 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        labelPartieWin2 = new javax.swing.JLabel();
        panelJoueur3 = new javax.swing.JPanel();
        scorePseudo3 = new javax.swing.JLabel();
        scoreJoueur3 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        labelPartieWin3 = new javax.swing.JLabel();
        panelJoueur4 = new javax.swing.JPanel();
        scorePseudo4 = new javax.swing.JLabel();
        scoreJoueur4 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        labelPartieWin4 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();

        jFrame1.setTitle("Projet IHM");
        jFrame1.setResizable(false);

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 18));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Nouvelle Partie");

        jLabel2.setText("Nombre de joueurs : ");

        comboBoxNbJoueur.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2", "3", "4" }));
        comboBoxNbJoueur.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBoxNbJoueurActionPerformed(evt);
            }
        });

        jPanel1.setLayout(new java.awt.GridLayout(4, 1));

        jLabel4.setText("Nom joueur 1:");

        textNomJoueur1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                textNomJoueur1KeyReleased(evt);
            }
        });

        javax.swing.GroupLayout panelNomJoueur1Layout = new javax.swing.GroupLayout(panelNomJoueur1);
        panelNomJoueur1.setLayout(panelNomJoueur1Layout);
        panelNomJoueur1Layout.setHorizontalGroup(
            panelNomJoueur1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelNomJoueur1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(textNomJoueur1, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(102, Short.MAX_VALUE))
        );
        panelNomJoueur1Layout.setVerticalGroup(
            panelNomJoueur1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelNomJoueur1Layout.createSequentialGroup()
                .addContainerGap(16, Short.MAX_VALUE)
                .addGroup(panelNomJoueur1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(textNomJoueur1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel1.add(panelNomJoueur1);

        jLabel5.setText("Nom joueur 2:");

        textNomJoueur2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                textNomJoueur2KeyReleased(evt);
            }
        });

        javax.swing.GroupLayout panelNomJoueur2Layout = new javax.swing.GroupLayout(panelNomJoueur2);
        panelNomJoueur2.setLayout(panelNomJoueur2Layout);
        panelNomJoueur2Layout.setHorizontalGroup(
            panelNomJoueur2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelNomJoueur2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(textNomJoueur2, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(102, Short.MAX_VALUE))
        );
        panelNomJoueur2Layout.setVerticalGroup(
            panelNomJoueur2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelNomJoueur2Layout.createSequentialGroup()
                .addContainerGap(16, Short.MAX_VALUE)
                .addGroup(panelNomJoueur2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(textNomJoueur2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel1.add(panelNomJoueur2);
        panelNomJoueur2.setVisible(false);

        jLabel6.setText("Nom joueur 3:");

        textNomJoueur3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                textNomJoueur3KeyReleased(evt);
            }
        });

        javax.swing.GroupLayout panelNomJoueur3Layout = new javax.swing.GroupLayout(panelNomJoueur3);
        panelNomJoueur3.setLayout(panelNomJoueur3Layout);
        panelNomJoueur3Layout.setHorizontalGroup(
            panelNomJoueur3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelNomJoueur3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(textNomJoueur3, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(102, Short.MAX_VALUE))
        );
        panelNomJoueur3Layout.setVerticalGroup(
            panelNomJoueur3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelNomJoueur3Layout.createSequentialGroup()
                .addContainerGap(16, Short.MAX_VALUE)
                .addGroup(panelNomJoueur3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(textNomJoueur3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel1.add(panelNomJoueur3);
        panelNomJoueur3.setVisible(false);

        jLabel7.setText("Nom joueur 4:");

        textNomJoueur4.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                textNomJoueur4KeyReleased(evt);
            }
        });

        javax.swing.GroupLayout panelNomJoueur4Layout = new javax.swing.GroupLayout(panelNomJoueur4);
        panelNomJoueur4.setLayout(panelNomJoueur4Layout);
        panelNomJoueur4Layout.setHorizontalGroup(
            panelNomJoueur4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelNomJoueur4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(textNomJoueur4, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(102, Short.MAX_VALUE))
        );
        panelNomJoueur4Layout.setVerticalGroup(
            panelNomJoueur4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelNomJoueur4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(panelNomJoueur4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(textNomJoueur4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(106, 106, 106))
        );

        jPanel1.add(panelNomJoueur4);
        panelNomJoueur4.setVisible(false);

        jPanel6.setLayout(new java.awt.BorderLayout());

        buttonJouer.setText("Jouer");
        buttonJouer.setEnabled(false);
        buttonJouer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonJouerActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jFrame1Layout = new javax.swing.GroupLayout(jFrame1.getContentPane());
        jFrame1.getContentPane().setLayout(jFrame1Layout);
        jFrame1Layout.setHorizontalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 361, Short.MAX_VALUE)
            .addGroup(jFrame1Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(comboBoxNbJoueur, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(194, Short.MAX_VALUE))
            .addGroup(jFrame1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 341, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 341, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(jFrame1Layout.createSequentialGroup()
                .addGap(108, 108, 108)
                .addComponent(buttonJouer)
                .addContainerGap(194, Short.MAX_VALUE))
        );
        jFrame1Layout.setVerticalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jFrame1Layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(comboBoxNbJoueur, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)
                .addComponent(buttonJouer)
                .addContainerGap())
        );

        jFrame2.setTitle("Projet IHM");
        jFrame2.setResizable(false);

        jButton1.setText("Fermer");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("Projet IHM");

        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("L3 Miage 2011");

        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("NICOLAS Jeremy // MICHEL Rémi");

        javax.swing.GroupLayout jFrame2Layout = new javax.swing.GroupLayout(jFrame2.getContentPane());
        jFrame2.getContentPane().setLayout(jFrame2Layout);
        jFrame2Layout.setHorizontalGroup(
            jFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jFrame2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jFrame2Layout.createSequentialGroup()
                        .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, 356, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jFrame2Layout.createSequentialGroup()
                        .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, 356, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jFrame2Layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addGap(145, 145, 145))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jFrame2Layout.createSequentialGroup()
                        .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, 356, Short.MAX_VALUE)
                        .addContainerGap())))
        );
        jFrame2Layout.setVerticalGroup(
            jFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jFrame2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel8)
                .addGap(18, 18, 18)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addContainerGap())
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Projet IHM");

        panelJeu.setLayout(new java.awt.GridLayout(4, 4, 3, 3));

        carte11.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        carte11.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                carte11MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout carte11Layout = new javax.swing.GroupLayout(carte11);
        carte11.setLayout(carte11Layout);
        carte11Layout.setHorizontalGroup(
            carte11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 83, Short.MAX_VALUE)
        );
        carte11Layout.setVerticalGroup(
            carte11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 146, Short.MAX_VALUE)
        );

        panelJeu.add(carte11);

        carte12.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        carte12.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                carte12MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout carte12Layout = new javax.swing.GroupLayout(carte12);
        carte12.setLayout(carte12Layout);
        carte12Layout.setHorizontalGroup(
            carte12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 83, Short.MAX_VALUE)
        );
        carte12Layout.setVerticalGroup(
            carte12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 146, Short.MAX_VALUE)
        );

        panelJeu.add(carte12);

        carte13.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        carte13.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                carte13MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout carte13Layout = new javax.swing.GroupLayout(carte13);
        carte13.setLayout(carte13Layout);
        carte13Layout.setHorizontalGroup(
            carte13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 83, Short.MAX_VALUE)
        );
        carte13Layout.setVerticalGroup(
            carte13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 146, Short.MAX_VALUE)
        );

        panelJeu.add(carte13);

        carte14.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        carte14.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                carte14MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout carte14Layout = new javax.swing.GroupLayout(carte14);
        carte14.setLayout(carte14Layout);
        carte14Layout.setHorizontalGroup(
            carte14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 83, Short.MAX_VALUE)
        );
        carte14Layout.setVerticalGroup(
            carte14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 146, Short.MAX_VALUE)
        );

        panelJeu.add(carte14);

        carte21.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        carte21.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                carte21MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout carte21Layout = new javax.swing.GroupLayout(carte21);
        carte21.setLayout(carte21Layout);
        carte21Layout.setHorizontalGroup(
            carte21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 83, Short.MAX_VALUE)
        );
        carte21Layout.setVerticalGroup(
            carte21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 146, Short.MAX_VALUE)
        );

        panelJeu.add(carte21);

        carte22.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        carte22.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                carte22MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout carte22Layout = new javax.swing.GroupLayout(carte22);
        carte22.setLayout(carte22Layout);
        carte22Layout.setHorizontalGroup(
            carte22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 83, Short.MAX_VALUE)
        );
        carte22Layout.setVerticalGroup(
            carte22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 146, Short.MAX_VALUE)
        );

        panelJeu.add(carte22);

        carte23.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        carte23.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                carte23MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout carte23Layout = new javax.swing.GroupLayout(carte23);
        carte23.setLayout(carte23Layout);
        carte23Layout.setHorizontalGroup(
            carte23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 83, Short.MAX_VALUE)
        );
        carte23Layout.setVerticalGroup(
            carte23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 146, Short.MAX_VALUE)
        );

        panelJeu.add(carte23);

        carte24.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        carte24.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                carte24MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout carte24Layout = new javax.swing.GroupLayout(carte24);
        carte24.setLayout(carte24Layout);
        carte24Layout.setHorizontalGroup(
            carte24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 83, Short.MAX_VALUE)
        );
        carte24Layout.setVerticalGroup(
            carte24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 146, Short.MAX_VALUE)
        );

        panelJeu.add(carte24);

        carte31.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        carte31.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                carte31MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout carte31Layout = new javax.swing.GroupLayout(carte31);
        carte31.setLayout(carte31Layout);
        carte31Layout.setHorizontalGroup(
            carte31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 83, Short.MAX_VALUE)
        );
        carte31Layout.setVerticalGroup(
            carte31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 146, Short.MAX_VALUE)
        );

        panelJeu.add(carte31);

        carte32.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        carte32.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                carte32MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout carte32Layout = new javax.swing.GroupLayout(carte32);
        carte32.setLayout(carte32Layout);
        carte32Layout.setHorizontalGroup(
            carte32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 83, Short.MAX_VALUE)
        );
        carte32Layout.setVerticalGroup(
            carte32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 146, Short.MAX_VALUE)
        );

        panelJeu.add(carte32);

        carte33.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        carte33.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                carte33MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout carte33Layout = new javax.swing.GroupLayout(carte33);
        carte33.setLayout(carte33Layout);
        carte33Layout.setHorizontalGroup(
            carte33Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 83, Short.MAX_VALUE)
        );
        carte33Layout.setVerticalGroup(
            carte33Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 146, Short.MAX_VALUE)
        );

        panelJeu.add(carte33);

        carte34.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        carte34.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                carte34MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout carte34Layout = new javax.swing.GroupLayout(carte34);
        carte34.setLayout(carte34Layout);
        carte34Layout.setHorizontalGroup(
            carte34Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 83, Short.MAX_VALUE)
        );
        carte34Layout.setVerticalGroup(
            carte34Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 146, Short.MAX_VALUE)
        );

        panelJeu.add(carte34);

        carte41.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        carte41.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                carte41MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout carte41Layout = new javax.swing.GroupLayout(carte41);
        carte41.setLayout(carte41Layout);
        carte41Layout.setHorizontalGroup(
            carte41Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 83, Short.MAX_VALUE)
        );
        carte41Layout.setVerticalGroup(
            carte41Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 146, Short.MAX_VALUE)
        );

        panelJeu.add(carte41);

        carte42.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        carte42.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                carte42MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout carte42Layout = new javax.swing.GroupLayout(carte42);
        carte42.setLayout(carte42Layout);
        carte42Layout.setHorizontalGroup(
            carte42Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 83, Short.MAX_VALUE)
        );
        carte42Layout.setVerticalGroup(
            carte42Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 146, Short.MAX_VALUE)
        );

        panelJeu.add(carte42);

        carte43.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        carte43.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                carte43MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout carte43Layout = new javax.swing.GroupLayout(carte43);
        carte43.setLayout(carte43Layout);
        carte43Layout.setHorizontalGroup(
            carte43Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 83, Short.MAX_VALUE)
        );
        carte43Layout.setVerticalGroup(
            carte43Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 146, Short.MAX_VALUE)
        );

        panelJeu.add(carte43);

        carte44.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        carte44.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                carte44MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout carte44Layout = new javax.swing.GroupLayout(carte44);
        carte44.setLayout(carte44Layout);
        carte44Layout.setHorizontalGroup(
            carte44Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 83, Short.MAX_VALUE)
        );
        carte44Layout.setVerticalGroup(
            carte44Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 146, Short.MAX_VALUE)
        );

        panelJeu.add(carte44);

        progressBarCarte.setMaximum(16);
        progressBarCarte.setPreferredSize(new java.awt.Dimension(100, 14));

        jSeparator2.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jLabel3.setFont(new java.awt.Font("Dialog", 1, 18));
        jLabel3.setText("Score");

        jPanel7.setLayout(new java.awt.GridLayout(4, 1));

        panelJoueur1.setPreferredSize(new java.awt.Dimension(80, 100));

        scorePseudo1.setText("Joueur 1: ");

        scoreJoueur1.setText("0");
        scoreJoueur1.setPreferredSize(new java.awt.Dimension(45, 16));

        jLabel11.setText("Partie Gagne :");

        labelPartieWin1.setText("0 ( 0% )");

        javax.swing.GroupLayout panelJoueur1Layout = new javax.swing.GroupLayout(panelJoueur1);
        panelJoueur1.setLayout(panelJoueur1Layout);
        panelJoueur1Layout.setHorizontalGroup(
            panelJoueur1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelJoueur1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelJoueur1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelJoueur1Layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(labelPartieWin1))
                    .addGroup(panelJoueur1Layout.createSequentialGroup()
                        .addComponent(scorePseudo1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(scoreJoueur1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(89, Short.MAX_VALUE))
        );
        panelJoueur1Layout.setVerticalGroup(
            panelJoueur1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelJoueur1Layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(panelJoueur1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(scorePseudo1)
                    .addComponent(scoreJoueur1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelJoueur1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(labelPartieWin1))
                .addContainerGap(40, Short.MAX_VALUE))
        );

        jPanel7.add(panelJoueur1);
        panelJoueur1.setVisible(false);

        scorePseudo2.setText("Joueur 2: ");

        scoreJoueur2.setText("0");
        scoreJoueur2.setPreferredSize(new java.awt.Dimension(46, 15));

        jLabel13.setText("Partie Gagne :");

        labelPartieWin2.setText("0 ( 0% )");

        javax.swing.GroupLayout panelJoueur2Layout = new javax.swing.GroupLayout(panelJoueur2);
        panelJoueur2.setLayout(panelJoueur2Layout);
        panelJoueur2Layout.setHorizontalGroup(
            panelJoueur2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelJoueur2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelJoueur2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelJoueur2Layout.createSequentialGroup()
                        .addComponent(jLabel13)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(labelPartieWin2))
                    .addGroup(panelJoueur2Layout.createSequentialGroup()
                        .addComponent(scorePseudo2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(scoreJoueur2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(89, Short.MAX_VALUE))
        );
        panelJoueur2Layout.setVerticalGroup(
            panelJoueur2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelJoueur2Layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(panelJoueur2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(scorePseudo2)
                    .addComponent(scoreJoueur2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelJoueur2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(labelPartieWin2))
                .addContainerGap(38, Short.MAX_VALUE))
        );

        jPanel7.add(panelJoueur2);
        panelJoueur2.setVisible(false);

        scorePseudo3.setText("Joueur 3:");

        scoreJoueur3.setText("0");
        scoreJoueur3.setPreferredSize(new java.awt.Dimension(45, 16));

        jLabel15.setText("Partie Gagne :");

        labelPartieWin3.setText("0 ( 0% )");

        javax.swing.GroupLayout panelJoueur3Layout = new javax.swing.GroupLayout(panelJoueur3);
        panelJoueur3.setLayout(panelJoueur3Layout);
        panelJoueur3Layout.setHorizontalGroup(
            panelJoueur3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelJoueur3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelJoueur3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelJoueur3Layout.createSequentialGroup()
                        .addComponent(jLabel15)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(labelPartieWin3))
                    .addGroup(panelJoueur3Layout.createSequentialGroup()
                        .addComponent(scorePseudo3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(scoreJoueur3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(89, Short.MAX_VALUE))
        );
        panelJoueur3Layout.setVerticalGroup(
            panelJoueur3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelJoueur3Layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(panelJoueur3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(scorePseudo3)
                    .addComponent(scoreJoueur3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelJoueur3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(labelPartieWin3))
                .addContainerGap(39, Short.MAX_VALUE))
        );

        jPanel7.add(panelJoueur3);
        panelJoueur3.setVisible(false);

        scorePseudo4.setText("Joueur 4:");

        scoreJoueur4.setText("0");
        scoreJoueur4.setPreferredSize(new java.awt.Dimension(45, 16));

        jLabel17.setText("Partie Gagne :");

        labelPartieWin4.setText("0 ( 0% )");

        javax.swing.GroupLayout panelJoueur4Layout = new javax.swing.GroupLayout(panelJoueur4);
        panelJoueur4.setLayout(panelJoueur4Layout);
        panelJoueur4Layout.setHorizontalGroup(
            panelJoueur4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelJoueur4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelJoueur4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelJoueur4Layout.createSequentialGroup()
                        .addComponent(jLabel17)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(labelPartieWin4))
                    .addGroup(panelJoueur4Layout.createSequentialGroup()
                        .addComponent(scorePseudo4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(scoreJoueur4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(89, Short.MAX_VALUE))
        );
        panelJoueur4Layout.setVerticalGroup(
            panelJoueur4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelJoueur4Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(panelJoueur4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(scorePseudo4)
                    .addComponent(scoreJoueur4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelJoueur4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(labelPartieWin4))
                .addContainerGap(38, Short.MAX_VALUE))
        );

        jPanel7.add(panelJoueur4);
        panelJoueur4.setVisible(false);

        javax.swing.GroupLayout panelScoreLayout = new javax.swing.GroupLayout(panelScore);
        panelScore.setLayout(panelScoreLayout);
        panelScoreLayout.setHorizontalGroup(
            panelScoreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelScoreLayout.createSequentialGroup()
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(panelScoreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelScoreLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.DEFAULT_SIZE, 224, Short.MAX_VALUE))
                    .addGroup(panelScoreLayout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(progressBarCarte, javax.swing.GroupLayout.DEFAULT_SIZE, 204, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(panelScoreLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, 214, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(panelScoreLayout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 172, Short.MAX_VALUE)
                        .addContainerGap())))
        );
        panelScoreLayout.setVerticalGroup(
            panelScoreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelScoreLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 71, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, 457, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(progressBarCarte, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addComponent(jSeparator2, javax.swing.GroupLayout.DEFAULT_SIZE, 604, Short.MAX_VALUE)
        );

        jMenu1.setText("Partie");

        jMenuItem3.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem3.setText("Nouvelle Partie");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem3);

        jMenuItem4.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_B, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem4.setText("Recommencer");
        jMenuItem4.setEnabled(false);
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem4);

        jMenuItem2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Q, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem2.setText("Quitter");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Help");

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_I, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem1.setText("A Propos");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem1);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(panelJeu, javax.swing.GroupLayout.DEFAULT_SIZE, 350, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelScore, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelJeu, javax.swing.GroupLayout.DEFAULT_SIZE, 604, Short.MAX_VALUE)
            .addComponent(panelScore, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed

        textNomJoueur1.setText("");
        textNomJoueur2.setText(""); 
        textNomJoueur3.setText(""); 
        textNomJoueur4.setText("");

        buttonJouer.setEnabled(false);
        jFrame1.setSize(285, 350);
        this.centrerFrame(jFrame1);
        jFrame1.setVisible(true);

        if (this.partie.getNbParticipants() == 0)
            this.partie.setNbParticipants(1);
        else
            this.partie.setNbParticipants(this.partie.getNbParticipants());
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void comboBoxNbJoueurActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBoxNbJoueurActionPerformed
        if(comboBoxNbJoueur.getSelectedIndex() == 0)
        {
            panelNomJoueur1.setVisible(true);
            panelNomJoueur2.setVisible(false);
            panelNomJoueur3.setVisible(false);
            panelNomJoueur4.setVisible(false);
        }
        else if(comboBoxNbJoueur.getSelectedIndex() == 1)
        {
            panelNomJoueur1.setVisible(true);
            panelNomJoueur2.setVisible(true);
            panelNomJoueur3.setVisible(false);
            panelNomJoueur4.setVisible(false);
        }
        else if(comboBoxNbJoueur.getSelectedIndex() == 2){
            panelNomJoueur1.setVisible(true);
            panelNomJoueur2.setVisible(true);
            panelNomJoueur3.setVisible(true);
            panelNomJoueur4.setVisible(false);
        }
        else if(comboBoxNbJoueur.getSelectedIndex() == 3){
            panelNomJoueur1.setVisible(true);
            panelNomJoueur2.setVisible(true);
            panelNomJoueur3.setVisible(true);
            panelNomJoueur4.setVisible(true);
            }

        this.partie.setNbParticipants(comboBoxNbJoueur.getSelectedIndex()+1);
    }//GEN-LAST:event_comboBoxNbJoueurActionPerformed

    private void textNomJoueur1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textNomJoueur1KeyReleased
        // TODO add your handling code here:
        if(comboBoxNbJoueur.getSelectedIndex()==0)
            if(textNomJoueur1.getText().length()>0)
               buttonJouer.setEnabled(true);
            else
                buttonJouer.setEnabled(false);
        else if(comboBoxNbJoueur.getSelectedIndex()==1)
            this.textNomJoueur2KeyReleased(evt);
        else if(comboBoxNbJoueur.getSelectedIndex()==2)
            this.textNomJoueur3KeyReleased(evt);
        else if(comboBoxNbJoueur.getSelectedIndex()==3)
            this.textNomJoueur4KeyReleased(evt);
 

    }//GEN-LAST:event_textNomJoueur1KeyReleased

    private void textNomJoueur2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textNomJoueur2KeyReleased
        // TODO add your handling code here:
          if(comboBoxNbJoueur.getSelectedIndex()==1)
            if(textNomJoueur1.getText().length()>0 && textNomJoueur2.getText().length()>0 )
               buttonJouer.setEnabled(true);
            else
                buttonJouer.setEnabled(false);
                  else if(comboBoxNbJoueur.getSelectedIndex()==1)
            this.textNomJoueur2KeyReleased(evt);
        else if(comboBoxNbJoueur.getSelectedIndex()==2)
            this.textNomJoueur3KeyReleased(evt);
        else if(comboBoxNbJoueur.getSelectedIndex()==3)
            this.textNomJoueur4KeyReleased(evt);
    }//GEN-LAST:event_textNomJoueur2KeyReleased

    private void textNomJoueur3KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textNomJoueur3KeyReleased
        // TODO add your handling code here:
          if(comboBoxNbJoueur.getSelectedIndex()==2)
            if(textNomJoueur1.getText().length()>0 && textNomJoueur2.getText().length()>0 && textNomJoueur3.getText().length()>0 )
               buttonJouer.setEnabled(true);
            else
                buttonJouer.setEnabled(false);
        else if(comboBoxNbJoueur.getSelectedIndex()==1)
            this.textNomJoueur2KeyReleased(evt);
        else if(comboBoxNbJoueur.getSelectedIndex()==2)
            this.textNomJoueur3KeyReleased(evt);
        else if(comboBoxNbJoueur.getSelectedIndex()==3)
            this.textNomJoueur4KeyReleased(evt);
    }//GEN-LAST:event_textNomJoueur3KeyReleased

    private void textNomJoueur4KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textNomJoueur4KeyReleased
        // TODO add your handling code here:
        if(comboBoxNbJoueur.getSelectedIndex()==3)
            if(textNomJoueur1.getText().length()>0 && textNomJoueur2.getText().length()>0 && textNomJoueur3.getText().length()>0 && textNomJoueur4.getText().length()>0 )
               buttonJouer.setEnabled(true);
            else
                buttonJouer.setEnabled(false);
        else if(comboBoxNbJoueur.getSelectedIndex()==1)
            this.textNomJoueur2KeyReleased(evt);
        else if(comboBoxNbJoueur.getSelectedIndex()==2)
            this.textNomJoueur3KeyReleased(evt);
        else if(comboBoxNbJoueur.getSelectedIndex()==3)
            this.textNomJoueur4KeyReleased(evt);
    }//GEN-LAST:event_textNomJoueur4KeyReleased

    private void buttonJouerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonJouerActionPerformed
        progressBarCarte.setValue(0);

        labelPartieWin1.setText("0 ( 0% )");
        labelPartieWin2.setText("0 ( 0% )");
        labelPartieWin3.setText("0 ( 0% )");
        labelPartieWin4.setText("0 ( 0% )");

        scoreJoueur1.setText("0");
        scoreJoueur2.setText("0");
        scoreJoueur3.setText("0");
        scoreJoueur4.setText("0");

        jMenuItem4.setEnabled(true);

        this.afficherToutesCarte();
        this.tabDessinTrouve.removeAllElements();
        this.tabDessinTrouve.setVectorGraphicsCarteTrouve(new Vector());

        for(int i = 1; i <= this.partie.getNbParticipants(); i++) {
            if (i == 1) {
             partie.putJoueur(i, textNomJoueur1.getText());
             scorePseudo1.setText(partie.getPseudoId(1)+" : ");
             panelJoueur1.setVisible(true);
             panelJoueur2.setVisible(false);
             panelJoueur3.setVisible(false);
             panelJoueur4.setVisible(false);
            }
            else if(i == 2) {
             partie.putJoueur(i, textNomJoueur2.getText());
             scorePseudo2.setText(partie.getPseudoId(2)+" : ");
             panelJoueur2.setVisible(true);
             panelJoueur3.setVisible(false);
             panelJoueur4.setVisible(false);
            }
            else if(i == 3) {
             partie.putJoueur(i, textNomJoueur3.getText());
             scorePseudo3.setText(partie.getPseudoId(3)+" : ");
             panelJoueur3.setVisible(true);
             panelJoueur4.setVisible(false);
            }
            else if(i == 4) {
             partie.putJoueur(i, textNomJoueur4.getText());
             scorePseudo4.setText(partie.getPseudoId(4)+" : ");
             panelJoueur4.setVisible(true);
            }
        }

        jFrame1.setVisible(false);

        if(this.partie.getMapCarte() != null) {
            this.partie.creerCarte();
            this.partie.positionnerAleatoire();
        }
        else
            this.partie.positionnerAleatoire();

        this.partie.reinitialiserCarte();
        this.repaint();

        this.partie.setJoueurActif(this.partie.joueurAleatoire());
        this.partie.setPartieActif(true);

        scorePseudo1.setForeground(Color.black);
        scorePseudo2.setForeground(Color.black);
        scorePseudo3.setForeground(Color.black);
        scorePseudo4.setForeground(Color.black);

        if (this.partie.getJoueurActif() == 1)
          scorePseudo1.setForeground(Color.red);
        else if (this.partie.getJoueurActif() == 2)
          scorePseudo2.setForeground(Color.red);
        else if (this.partie.getJoueurActif() == 3)
          scorePseudo3.setForeground(Color.red);
        else
          scorePseudo4.setForeground(Color.red);



    }//GEN-LAST:event_buttonJouerActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        this.dispose();
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void carte11MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_carte11MouseClicked
        Point pt = new Point(1,1);
        if(this.partie.isPartieActif() &&
                ! this.partie.getCartePosition(pt).isTrouve() &&
                ! this.partie.isPartieWait() &&
                ! this.partie.getCartePosition(pt).isRetourne())
        {
            Dessin dessin = new Dessin(partie.getCartePosition(pt).getDessin(), pt, carte11);
            dessin.dessiner(carte11.getGraphics());
            partie.getCartePosition(pt).setRetourne(true);
            this.testCarteRetourne();
            this.tabUneCarteDessin.removeAllElements();
            this.tabUneCarteDessin.setVectorGraphics(new Vector());
            this.tabUneCarteDessin.ajoutDessin(dessin, carte11);
        }
    }//GEN-LAST:event_carte11MouseClicked

    private void carte12MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_carte12MouseClicked
        // TODO add your handling code here:
        Point pt = new Point(2,1);
        if(this.partie.isPartieActif() &&
                ! this.partie.getCartePosition(pt).isTrouve() &&
                ! this.partie.isPartieWait() &&
                ! this.partie.getCartePosition(pt).isRetourne())
        {
            Dessin dessin = new Dessin(partie.getCartePosition(pt).getDessin(), pt, carte12);
            dessin.dessiner(carte12.getGraphics());
            partie.getCartePosition(pt).setRetourne(true);
            this.testCarteRetourne();
            this.tabUneCarteDessin.removeAllElements();
            this.tabUneCarteDessin.setVectorGraphics(new Vector());
            this.tabUneCarteDessin.ajoutDessin(dessin, carte12);
        }
    }//GEN-LAST:event_carte12MouseClicked

    private void carte13MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_carte13MouseClicked
        // TODO add your handling code here:
        
        Point pt = new Point(3,1);
        if(this.partie.isPartieActif() &&
                ! this.partie.getCartePosition(pt).isTrouve() &&
                ! this.partie.isPartieWait() &&
                ! this.partie.getCartePosition(pt).isRetourne())
        {
            Dessin dessin = new Dessin(partie.getCartePosition(pt).getDessin(), pt, carte13);
            dessin.dessiner(carte13.getGraphics());
            partie.getCartePosition(pt).setRetourne(true);
            this.testCarteRetourne();
            this.tabUneCarteDessin.removeAllElements();
            this.tabUneCarteDessin.setVectorGraphics(new Vector());
            this.tabUneCarteDessin.ajoutDessin(dessin, carte13);
        }
    }//GEN-LAST:event_carte13MouseClicked

    private void carte14MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_carte14MouseClicked
  //      // TODO add your handling code here:
        Point pt = new Point(4,1);
        if(this.partie.isPartieActif() &&
                ! this.partie.getCartePosition(pt).isTrouve() &&
                ! this.partie.isPartieWait() &&
                ! this.partie.getCartePosition(pt).isRetourne())
        {
            Dessin dessin = new Dessin(partie.getCartePosition(pt).getDessin(), pt, carte14);
            dessin.dessiner(carte14.getGraphics());
            partie.getCartePosition(pt).setRetourne(true);
            this.testCarteRetourne();
            this.tabUneCarteDessin.removeAllElements();
            this.tabUneCarteDessin.setVectorGraphics(new Vector());
            this.tabUneCarteDessin.ajoutDessin(dessin, carte14);
        }
    }//GEN-LAST:event_carte14MouseClicked

    private void carte21MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_carte21MouseClicked
        // TODO add your handling code here:
        Point pt = new Point(1,2);
        if(this.partie.isPartieActif() &&
                ! this.partie.getCartePosition(pt).isTrouve() &&
                ! this.partie.isPartieWait() &&
                ! this.partie.getCartePosition(pt).isRetourne())
        {
            Dessin dessin = new Dessin(partie.getCartePosition(pt).getDessin(), pt, carte21);
            dessin.dessiner(carte21.getGraphics());
            partie.getCartePosition(pt).setRetourne(true);
            this.testCarteRetourne();
                        this.tabUneCarteDessin.removeAllElements();
            this.tabUneCarteDessin.setVectorGraphics(new Vector());
            this.tabUneCarteDessin.ajoutDessin(dessin, carte21);
        }
    }//GEN-LAST:event_carte21MouseClicked

    private void carte22MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_carte22MouseClicked
        // TODO add your handling code here:
        Point pt = new Point(2,2);
        if(this.partie.isPartieActif() &&
                ! this.partie.getCartePosition(pt).isTrouve() &&
                ! this.partie.isPartieWait() &&
                ! this.partie.getCartePosition(pt).isRetourne())
        {
            Dessin dessin = new Dessin(partie.getCartePosition(pt).getDessin(),pt, carte22);
            dessin.dessiner(carte22.getGraphics());
            partie.getCartePosition(pt).setRetourne(true);
            this.testCarteRetourne();
            this.tabUneCarteDessin.removeAllElements();
            this.tabUneCarteDessin.setVectorGraphics(new Vector());
            this.tabUneCarteDessin.ajoutDessin(dessin, carte22);
        }
    }//GEN-LAST:event_carte22MouseClicked

    private void carte23MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_carte23MouseClicked
        // TODO add your handling code here:
        Point pt = new Point(3,2);
        if(this.partie.isPartieActif() &&
                ! this.partie.getCartePosition(pt).isTrouve() &&
                ! this.partie.isPartieWait() &&
                ! this.partie.getCartePosition(pt).isRetourne())
        {
            Dessin dessin = new Dessin(partie.getCartePosition(pt).getDessin(), pt, carte23);
            dessin.dessiner(carte23.getGraphics());
            partie.getCartePosition(pt).setRetourne(true);
            this.testCarteRetourne();
            this.tabUneCarteDessin.removeAllElements();
            this.tabUneCarteDessin.setVectorGraphics(new Vector());
            this.tabUneCarteDessin.ajoutDessin(dessin, carte23);
        }
    }//GEN-LAST:event_carte23MouseClicked

    private void carte24MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_carte24MouseClicked
        // TODO add your handling code here:
        Point pt = new Point(4,2);
        if(this.partie.isPartieActif() &&
                ! this.partie.getCartePosition(pt).isTrouve() &&
                ! this.partie.isPartieWait() &&
                ! this.partie.getCartePosition(pt).isRetourne())
        {
            Dessin dessin = new Dessin(partie.getCartePosition(pt).getDessin(), pt, carte24);
            dessin.dessiner(carte24.getGraphics());
            partie.getCartePosition(pt).setRetourne(true);
            this.testCarteRetourne();
            this.tabUneCarteDessin.removeAllElements();
            this.tabUneCarteDessin.setVectorGraphics(new Vector());
            this.tabUneCarteDessin.ajoutDessin(dessin, carte24);
        }
    }//GEN-LAST:event_carte24MouseClicked

    private void carte31MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_carte31MouseClicked
        // TODO add your handling code here:
        Point pt = new Point(1,3);
        if(this.partie.isPartieActif() &&
                ! this.partie.getCartePosition(pt).isTrouve() &&
                ! this.partie.isPartieWait() &&
                ! this.partie.getCartePosition(pt).isRetourne())
        {
            Dessin dessin = new Dessin(partie.getCartePosition(pt).getDessin(), pt, carte31);
            dessin.dessiner(carte31.getGraphics());
            partie.getCartePosition(pt).setRetourne(true);
            this.testCarteRetourne();
            this.tabUneCarteDessin.removeAllElements();
            this.tabUneCarteDessin.setVectorGraphics(new Vector());
            this.tabUneCarteDessin.ajoutDessin(dessin, carte31);
        }
    }//GEN-LAST:event_carte31MouseClicked

    private void carte32MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_carte32MouseClicked
        // TODO add your handling code here:
        Point pt = new Point(2,3);
        if(this.partie.isPartieActif() &&
                ! this.partie.getCartePosition(pt).isTrouve() &&
                ! this.partie.isPartieWait() &&
                ! this.partie.getCartePosition(pt).isRetourne())
        {
            Dessin dessin = new Dessin(partie.getCartePosition(pt).getDessin(), pt, carte32);
            dessin.dessiner(carte32.getGraphics());
            partie.getCartePosition(pt).setRetourne(true);
            this.testCarteRetourne();
            this.tabUneCarteDessin.removeAllElements();
            this.tabUneCarteDessin.setVectorGraphics(new Vector());
            this.tabUneCarteDessin.ajoutDessin(dessin, carte32);
        }
    }//GEN-LAST:event_carte32MouseClicked

    private void carte33MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_carte33MouseClicked
        // TODO add your handling code here:
       Point pt = new Point(3,3);
       if(this.partie.isPartieActif() &&
                ! this.partie.getCartePosition(pt).isTrouve() &&
                ! this.partie.isPartieWait() &&
                ! this.partie.getCartePosition(pt).isRetourne())
       {
            Dessin dessin = new Dessin(partie.getCartePosition(pt).getDessin(), pt, carte33);
            dessin.dessiner(carte33.getGraphics());
            partie.getCartePosition(pt).setRetourne(true);
            this.testCarteRetourne();
            this.tabUneCarteDessin.removeAllElements();
            this.tabUneCarteDessin.setVectorGraphics(new Vector());
            this.tabUneCarteDessin.ajoutDessin(dessin, carte33);
        }
    }//GEN-LAST:event_carte33MouseClicked

    private void carte34MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_carte34MouseClicked
        // TODO add your handling code here:
        Point pt = new Point(4,3);
        if(this.partie.isPartieActif() &&
                ! this.partie.getCartePosition(pt).isTrouve() &&
                ! this.partie.isPartieWait() &&
                ! this.partie.getCartePosition(pt).isRetourne())
        {
            Dessin dessin = new Dessin(partie.getCartePosition(pt).getDessin(), pt, carte34);
            dessin.dessiner(carte34.getGraphics());
            partie.getCartePosition(pt).setRetourne(true);
            this.testCarteRetourne();
            this.tabUneCarteDessin.removeAllElements();
            this.tabUneCarteDessin.setVectorGraphics(new Vector());
            this.tabUneCarteDessin.ajoutDessin(dessin, carte34);
        }
    }//GEN-LAST:event_carte34MouseClicked

    private void carte41MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_carte41MouseClicked
        // TODO add your handling code here:
        Point pt = new Point(1,4);
        if(this.partie.isPartieActif() &&
                ! this.partie.getCartePosition(pt).isTrouve() &&
                ! this.partie.isPartieWait() &&
                ! this.partie.getCartePosition(pt).isRetourne())
        {
            Dessin dessin = new Dessin(partie.getCartePosition(pt).getDessin(), pt, carte41);
            dessin.dessiner(carte41.getGraphics());
            partie.getCartePosition(pt).setRetourne(true);
            this.testCarteRetourne();
            this.tabUneCarteDessin.removeAllElements();
            this.tabUneCarteDessin.setVectorGraphics(new Vector());
            this.tabUneCarteDessin.ajoutDessin(dessin, carte41);
        }
    }//GEN-LAST:event_carte41MouseClicked

    private void carte42MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_carte42MouseClicked
        // TODO add your handling code here:
        Point pt = new Point(2,4);
        if(this.partie.isPartieActif() &&
                ! this.partie.getCartePosition(pt).isTrouve() &&
                ! this.partie.isPartieWait() &&
                ! this.partie.getCartePosition(pt).isRetourne())
        {
            Dessin dessin = new Dessin(partie.getCartePosition(pt).getDessin(), pt, carte42);
            dessin.dessiner(carte42.getGraphics());
            partie.getCartePosition(pt).setRetourne(true);
            this.testCarteRetourne();
            this.tabUneCarteDessin.removeAllElements();
            this.tabUneCarteDessin.setVectorGraphics(new Vector());
            this.tabUneCarteDessin.ajoutDessin(dessin, carte42);
        }
    }//GEN-LAST:event_carte42MouseClicked

    private void carte43MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_carte43MouseClicked
        // TODO add your handling code here:
        Point pt = new Point(3,4);
        if(this.partie.isPartieActif() &&
                ! this.partie.getCartePosition(pt).isTrouve() &&
                ! this.partie.isPartieWait() &&
                ! this.partie.getCartePosition(pt).isRetourne())
        {
            Dessin dessin = new Dessin(partie.getCartePosition(pt).getDessin(), pt, carte43);
            dessin.dessiner(carte43.getGraphics());
            partie.getCartePosition(pt).setRetourne(true);
            this.testCarteRetourne();
            this.tabUneCarteDessin.removeAllElements();
            this.tabUneCarteDessin.setVectorGraphics(new Vector());
            this.tabUneCarteDessin.ajoutDessin(dessin, carte43);
        }
    }//GEN-LAST:event_carte43MouseClicked

    private void carte44MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_carte44MouseClicked
        // TODO add your handling code here:
        Point pt = new Point(4,4);
        if(this.partie.isPartieActif() &&
                ! this.partie.getCartePosition(pt).isTrouve() &&
                ! this.partie.isPartieWait() &&
                ! this.partie.getCartePosition(pt).isRetourne())
        {
            Dessin dessin = new Dessin(partie.getCartePosition(pt).getDessin(), pt, carte44);
            dessin.dessiner(carte44.getGraphics());
            partie.getCartePosition(pt).setRetourne(true);
            this.testCarteRetourne();
            this.tabUneCarteDessin.removeAllElements();
            this.tabUneCarteDessin.setVectorGraphics(new Vector());
            this.tabUneCarteDessin.ajoutDessin(dessin, carte44);
        }
    }//GEN-LAST:event_carte44MouseClicked

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        jFrame2.setSize(380, 155);
        this.centrerFrame(jFrame2);
        jFrame2.setVisible(true);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        jFrame2.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        progressBarCarte.setValue(0);

        scoreJoueur1.setText("0");
        scoreJoueur2.setText("0");
        scoreJoueur3.setText("0");
        scoreJoueur4.setText("0");

        jMenuItem4.setEnabled(true);

        this.afficherToutesCarte();
        this.tabDessinTrouve.removeAllElements();
        this.tabDessinTrouve.setVectorGraphicsCarteTrouve(new Vector());



        jFrame1.setVisible(false);

        if(this.partie.getMapCarte() != null) {
            this.partie.creerCarte();
            this.partie.positionnerAleatoire();
        }
        else
            this.partie.positionnerAleatoire();

        this.partie.reinitialiserCarte();
        this.repaint();

        this.partie.setJoueurActif(this.partie.joueurAleatoire());
        this.partie.setPartieActif(true);

        scorePseudo1.setForeground(Color.black);
        scorePseudo2.setForeground(Color.black);
        scorePseudo3.setForeground(Color.black);
        scorePseudo4.setForeground(Color.black);

        if (this.partie.getJoueurActif() == 1)
          scorePseudo1.setForeground(Color.red);
        else if (this.partie.getJoueurActif() == 2)
          scorePseudo2.setForeground(Color.red);
        else if (this.partie.getJoueurActif() == 3)
          scorePseudo3.setForeground(Color.red);
        else
          scorePseudo4.setForeground(Color.red);
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void retournerTouteCarte(){
       Carte[] tabCarte=partie.tabCarteRetourne();
       String nomCarte="";
       for(int i=0; i<tabCarte.length; i++){
        nomCarte="carte"+tabCarte[i].getPosition().getY()+tabCarte[i].getPosition().getX();
        if(nomCarte.equalsIgnoreCase("carte11"))
        {
            if( ! tabCarte[i].isTrouve()){
                carte11.removeAll();
                carte11.repaint();
            }
            else{
                Dessin dessin = new Dessin(tabCarte[i].getDessin(), tabCarte[i].getPosition(), carte11);
                tabDessinTrouve.ajoutDessin(dessin, carte11);
            }
        }
        else if(nomCarte.equalsIgnoreCase("carte12"))
        {
            if( ! tabCarte[i].isTrouve()){
                carte12.removeAll();
                carte12.repaint();
            }
            else{
                Dessin dessin = new Dessin(tabCarte[i].getDessin(), tabCarte[i].getPosition(), carte12);
                tabDessinTrouve.ajoutDessin(dessin, carte12);
            }
        }
        else if(nomCarte.equalsIgnoreCase("carte13"))
        {
            if( ! tabCarte[i].isTrouve()){
                carte13.removeAll();
                carte13.repaint();
            }
            else{
                Dessin dessin = new Dessin(tabCarte[i].getDessin(), tabCarte[i].getPosition(), carte13);
                tabDessinTrouve.ajoutDessin(dessin, carte13);
            }
        }
        else if(nomCarte.equalsIgnoreCase("carte14"))
        {
            if( ! tabCarte[i].isTrouve()){
                carte14.removeAll();
                carte14.repaint();
            }
             else{
                Dessin dessin = new Dessin(tabCarte[i].getDessin(), tabCarte[i].getPosition(), carte14);
                tabDessinTrouve.ajoutDessin(dessin, carte14);
            }
        }
        else if(nomCarte.equalsIgnoreCase("carte21"))
        {
            if( ! tabCarte[i].isTrouve()){
                carte21.removeAll();
                carte21.repaint();
            }
            else{
                Dessin dessin = new Dessin(tabCarte[i].getDessin(), tabCarte[i].getPosition(), carte21);
                tabDessinTrouve.ajoutDessin(dessin, carte21);
            }
        }
        else if(nomCarte.equalsIgnoreCase("carte22"))
        {
            if( ! tabCarte[i].isTrouve()){
                carte22.removeAll();
                carte22.repaint();
            }
            else{
                Dessin dessin = new Dessin(tabCarte[i].getDessin(), tabCarte[i].getPosition(), carte22);
                tabDessinTrouve.ajoutDessin(dessin, carte22);
            }
        }
        else if(nomCarte.equalsIgnoreCase("carte23"))
        {
            if( ! tabCarte[i].isTrouve()){
                carte23.removeAll();
                carte23.repaint();
            }
            else{
                Dessin dessin = new Dessin(tabCarte[i].getDessin(), tabCarte[i].getPosition(), carte23);
                tabDessinTrouve.ajoutDessin(dessin, carte23);
            }
        }
        else if(nomCarte.equalsIgnoreCase("carte24"))
        {
            if( ! tabCarte[i].isTrouve()){
                carte24.removeAll();
                carte24.repaint();
            }
            else{
                Dessin dessin = new Dessin(tabCarte[i].getDessin(), tabCarte[i].getPosition(), carte24);
                tabDessinTrouve.ajoutDessin(dessin, carte24);
            }
        }
        else if(nomCarte.equalsIgnoreCase("carte31"))
        {
            if( ! tabCarte[i].isTrouve()){
                carte31.removeAll();
                carte31.repaint();
            }
            else{
                Dessin dessin = new Dessin(tabCarte[i].getDessin(), tabCarte[i].getPosition(), carte31);
                tabDessinTrouve.ajoutDessin(dessin, carte31);
            }
        }
        else if(nomCarte.equalsIgnoreCase("carte32"))
        {
            if( ! tabCarte[i].isTrouve()){
                carte32.removeAll();
                carte32.repaint();
            }
            else{
                Dessin dessin = new Dessin(tabCarte[i].getDessin(), tabCarte[i].getPosition(), carte32);
                tabDessinTrouve.ajoutDessin(dessin, carte32);
            }
        }
        else if(nomCarte.equalsIgnoreCase("carte33"))
        {
            if( ! tabCarte[i].isTrouve()){
                carte33.removeAll();
                carte33.repaint();
            }
            else{
                Dessin dessin = new Dessin(tabCarte[i].getDessin(), tabCarte[i].getPosition(), carte33);
                tabDessinTrouve.ajoutDessin(dessin, carte33);
            }
        }
        else if(nomCarte.equalsIgnoreCase("carte34"))
        {
            if( ! tabCarte[i].isTrouve()){
                carte34.removeAll();
                carte34.repaint();
            }
            else{
                Dessin dessin = new Dessin(tabCarte[i].getDessin(), tabCarte[i].getPosition(), carte34);
                tabDessinTrouve.ajoutDessin(dessin, carte34);
            }
        }
        else if(nomCarte.equalsIgnoreCase("carte41"))
        {
            if( ! tabCarte[i].isTrouve()){
                carte41.removeAll();
                carte41.repaint();
            }
            else{
                Dessin dessin = new Dessin(tabCarte[i].getDessin(), tabCarte[i].getPosition(), carte41);
                tabDessinTrouve.ajoutDessin(dessin, carte41);
            }
        }
        else if(nomCarte.equalsIgnoreCase("carte42"))
        {
            if( ! tabCarte[i].isTrouve()){
                carte42.removeAll();
                carte42.repaint();
            }
            else{
                Dessin dessin = new Dessin(tabCarte[i].getDessin(), tabCarte[i].getPosition(), carte42);
                tabDessinTrouve.ajoutDessin(dessin, carte42);
            }
        }
        else if(nomCarte.equalsIgnoreCase("carte43"))
        {
            if( ! tabCarte[i].isTrouve()){
                carte43.removeAll();
                carte43.repaint();
            }
            else{
                Dessin dessin = new Dessin(tabCarte[i].getDessin(), tabCarte[i].getPosition(), carte43);
                tabDessinTrouve.ajoutDessin(dessin, carte43);
            }
        }
        else if(nomCarte.equalsIgnoreCase("carte44"))
        {
            if( ! tabCarte[i].isTrouve()){
                carte44.removeAll();
                carte44.repaint();
            }
            else{
                Dessin dessin = new Dessin(tabCarte[i].getDessin(), tabCarte[i].getPosition(), carte44);
                tabDessinTrouve.ajoutDessin(dessin, carte44);
            }
        }
    }
       }

    private void testCarteRetourne(){
        boolean deuxCartesTrouvees;
        if(this.partie.deuxCartesRetourne()){
              this.partie.setPartieWait(true);
                this.waiting(1);
            deuxCartesTrouvees=this.partie.verifCarteTrouve();
            this.progressBarCarte.setValue(this.partie.nbCarteTrouve());
              if (this.partie.nbCarteTrouve() == 16)
                  this.partie.finDePartie();
            this.modifierPointJoueurActif();
            this.repaintScore();
            this.retournerTouteCarte();
            if(deuxCartesTrouvees && partie.nbCarteTrouve()!=16){
                Carte[] tabCarteRet = this.partie.tabCarteRetourne();
                String nomCarte1 = "carte"+tabCarteRet[0].getPosition().getX()+tabCarteRet[0].getPosition().getY();
                String nomCarte2 = "carte"+tabCarteRet[1].getPosition().getX()+tabCarteRet[1].getPosition().getY();
                this.effacerCarte(nomCarte1);
                this.effacerCarte(nomCarte2);
                 }
            else if(partie.nbCarteTrouve()==16){
                this.afficherToutesCarte();
                this.repaint();
              }
               this.partie.retournerTouteCarte();
               this.partie.setPartieWait(false);
            }
    }

    private void effacerCarte(String nomCarte){
        if(nomCarte.equalsIgnoreCase("carte11"))
            this.carte11.setVisible(false);
        else if(nomCarte.equalsIgnoreCase("carte21"))
            this.carte12.setVisible(false);
        else if(nomCarte.equalsIgnoreCase("carte31"))
            this.carte13.setVisible(false);
        else if(nomCarte.equalsIgnoreCase("carte41"))
            this.carte14.setVisible(false);
        else if(nomCarte.equalsIgnoreCase("carte12"))
            this.carte21.setVisible(false);
        else if(nomCarte.equalsIgnoreCase("carte22"))
            this.carte22.setVisible(false);
        else if(nomCarte.equalsIgnoreCase("carte32"))
            this.carte23.setVisible(false);
        else if(nomCarte.equalsIgnoreCase("carte42"))
            this.carte24.setVisible(false);
        else if(nomCarte.equalsIgnoreCase("carte13"))
            this.carte31.setVisible(false);
        else if(nomCarte.equalsIgnoreCase("carte23"))
            this.carte32.setVisible(false);
        else if(nomCarte.equalsIgnoreCase("carte33"))
            this.carte33.setVisible(false);
        else if(nomCarte.equalsIgnoreCase("carte43"))
            this.carte34.setVisible(false);
        else if(nomCarte.equalsIgnoreCase("carte14"))
            this.carte41.setVisible(false);
        else if(nomCarte.equalsIgnoreCase("carte24"))
            this.carte42.setVisible(false);
        else if(nomCarte.equalsIgnoreCase("carte34"))
            this.carte43.setVisible(false);
        else if(nomCarte.equalsIgnoreCase("carte44"))
            this.carte44.setVisible(false);
    }

    private void afficherToutesCarte(){
            this.carte11.setVisible(true);
            this.carte12.setVisible(true);
            this.carte13.setVisible(true);
            this.carte14.setVisible(true);
            this.carte21.setVisible(true);
            this.carte22.setVisible(true);
            this.carte23.setVisible(true);
            this.carte24.setVisible(true);
            this.carte31.setVisible(true);
            this.carte32.setVisible(true);
            this.carte33.setVisible(true);
            this.carte34.setVisible(true);
            this.carte41.setVisible(true);
            this.carte42.setVisible(true);
            this.carte43.setVisible(true);
            this.carte44.setVisible(true);
    }

    private void repaintScore(){
        scorePseudo1.setForeground(Color.black);
        scorePseudo2.setForeground(Color.black);
        scorePseudo3.setForeground(Color.black);
        scorePseudo4.setForeground(Color.black);

        if (this.partie.getJoueurActif() == 1)
          scorePseudo1.setForeground(Color.red);
        else if (this.partie.getJoueurActif() == 2)
          scorePseudo2.setForeground(Color.red);
        else if (this.partie.getJoueurActif() == 3)
          scorePseudo3.setForeground(Color.red);
        else
          scorePseudo4.setForeground(Color.red);
    }

    private void centrerFrame(javax.swing.JFrame frame) {

        //Center the window test jeremy
                    Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
                    Dimension frameSize = frame.getSize();
                    if (frameSize.height > screenSize.height)
                    {
                    frameSize.height = screenSize.height;
                    }
                    if (frameSize.width > screenSize.width)
                    {
                    frameSize.width = screenSize.width;
                    }
                    frame.setLocation((screenSize.width - frameSize.width) / 2,
                    (screenSize.height - frameSize.height) / 2);

    }

  private void waiting (int n){

        long t0, t1;

        t0 =  System.currentTimeMillis();

        do{
            t1 = System.currentTimeMillis();
        }
        while ((t1 - t0) < (n * 1000));
    }

    private void modifierPointJoueurActif(){

                scoreJoueur1.setText(String.valueOf(this.partie.getPointJoueurId(1)));
                labelPartieWin1.setText(String.valueOf(this.partie.getJoueurId(1).getStatistique().getNbPartieGagne())+" ( "+String.valueOf((int)this.partie.getJoueurId(1).getStatistique().getPourcentageGagne())+"% )");

                if (this.partie.getNbParticipants() >= 2 ) {
                scoreJoueur2.setText(String.valueOf(this.partie.getPointJoueurId(2)));
                labelPartieWin2.setText(String.valueOf(this.partie.getJoueurId(2).getStatistique().getNbPartieGagne())+" ( "+String.valueOf((int)this.partie.getJoueurId(2).getStatistique().getPourcentageGagne())+"% )");
        }
                if (this.partie.getNbParticipants() >= 3 ) {
                scoreJoueur3.setText(String.valueOf(this.partie.getPointJoueurId(3)));
                labelPartieWin3.setText(String.valueOf(this.partie.getJoueurId(3).getStatistique().getNbPartieGagne())+" ( "+String.valueOf((int)this.partie.getJoueurId(3).getStatistique().getPourcentageGagne())+"% )");
        }
                if (this.partie.getNbParticipants() >= 4 ) {
                scoreJoueur4.setText(String.valueOf(this.partie.getPointJoueurId(4)));
                labelPartieWin4.setText(String.valueOf(this.partie.getJoueurId(4).getStatistique().getNbPartieGagne())+" ( "+String.valueOf((int)this.partie.getJoueurId(4).getStatistique().getPourcentageGagne())+"% )");
        }
    }
            /**
     * Surcharge de la méthode paint()
     */

    public void paint(Graphics g){
        this.paintComponents(this.getGraphics());
        if(this.partie.uneCartesRetourne() && this.partie.nbCarteTrouve()<16)
            this.tabUneCarteDessin.dessiner(g);
        if(this.partie.nbCarteTrouve()==16)
            this.tabDessinTrouve.dessiner(g);
    }
    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                javax.swing.JFrame VueFen1 = new VueFen1();
                
                    Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
                    Dimension frameSize = VueFen1.getSize();
                    if (frameSize.height > screenSize.height)
                    {
                    frameSize.height = screenSize.height;
                    }
                    if (frameSize.width > screenSize.width)
                    {
                    frameSize.width = screenSize.width;
                    }
                    VueFen1.setLocation((screenSize.width - frameSize.width) / 2,
                    (screenSize.height - frameSize.height) / 2);

                VueFen1.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonJouer;
    private javax.swing.JPanel carte11;
    private javax.swing.JPanel carte12;
    private javax.swing.JPanel carte13;
    private javax.swing.JPanel carte14;
    private javax.swing.JPanel carte21;
    private javax.swing.JPanel carte22;
    private javax.swing.JPanel carte23;
    private javax.swing.JPanel carte24;
    private javax.swing.JPanel carte31;
    private javax.swing.JPanel carte32;
    private javax.swing.JPanel carte33;
    private javax.swing.JPanel carte34;
    private javax.swing.JPanel carte41;
    private javax.swing.JPanel carte42;
    private javax.swing.JPanel carte43;
    private javax.swing.JPanel carte44;
    private javax.swing.JComboBox comboBoxNbJoueur;
    private javax.swing.JButton jButton1;
    private javax.swing.JFrame jFrame1;
    private javax.swing.JFrame jFrame2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JLabel labelPartieWin1;
    private javax.swing.JLabel labelPartieWin2;
    private javax.swing.JLabel labelPartieWin3;
    private javax.swing.JLabel labelPartieWin4;
    private javax.swing.JPanel panelJeu;
    private javax.swing.JPanel panelJoueur1;
    private javax.swing.JPanel panelJoueur2;
    private javax.swing.JPanel panelJoueur3;
    private javax.swing.JPanel panelJoueur4;
    private javax.swing.JPanel panelNomJoueur1;
    private javax.swing.JPanel panelNomJoueur2;
    private javax.swing.JPanel panelNomJoueur3;
    private javax.swing.JPanel panelNomJoueur4;
    private javax.swing.JPanel panelScore;
    private javax.swing.JProgressBar progressBarCarte;
    private javax.swing.JLabel scoreJoueur1;
    private javax.swing.JLabel scoreJoueur2;
    private javax.swing.JLabel scoreJoueur3;
    private javax.swing.JLabel scoreJoueur4;
    private javax.swing.JLabel scorePseudo1;
    private javax.swing.JLabel scorePseudo2;
    private javax.swing.JLabel scorePseudo3;
    private javax.swing.JLabel scorePseudo4;
    private javax.swing.JTextField textNomJoueur1;
    private javax.swing.JTextField textNomJoueur2;
    private javax.swing.JTextField textNomJoueur3;
    private javax.swing.JTextField textNomJoueur4;
    // End of variables declaration//GEN-END:variables

    private Partie partie = new Partie();
    private SuiteDessin tabUneCarteDessin = new SuiteDessin();
    private SuiteDessinTrouve tabDessinTrouve = new SuiteDessinTrouve();
}
